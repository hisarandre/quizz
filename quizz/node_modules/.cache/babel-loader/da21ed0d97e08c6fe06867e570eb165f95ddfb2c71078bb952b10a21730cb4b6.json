{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n\n/**\r\n * Fetch data from an url\r\n * and return the resolved promise or a console log (error/loading)\r\n *\r\n * @param { String } url\r\n * @return { Object }\r\n */\n\nexport function useFetch(url) {\n  _s();\n  const [data, setData] = useState({});\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    if (!url) return;\n    setLoading(true);\n    async function fetchData() {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        setData(data);\n      } catch (err) {\n        console.log(err);\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [url]);\n  if (error) return onsole.log(error);\n  if (isLoading) return console.log(\"It's loading\");\n  if (!error && !isLoading && data) {\n    return data;\n  }\n}\n_s(useFetch, \"I3PlMlwpe/K4XMhtkGOVndNNG2k=\");","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","data","setData","isLoading","setLoading","error","setError","fetchData","response","fetch","json","err","console","log","onsole"],"sources":["C:/Users/infos/Documents/quizz/quizz/src/services/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n/**\r\n * Fetch data from an url\r\n * and return the resolved promise or a console log (error/loading)\r\n *\r\n * @param { String } url\r\n * @return { Object }\r\n */\r\n\r\nexport function useFetch(url) {\r\n  const [data, setData] = useState({});\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!url) return;\r\n\r\n    setLoading(true);\r\n\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setData(data);\r\n      } catch (err) {\r\n        console.log(err);\r\n        setError(true);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  if (error) return onsole.log(error);\r\n  if (isLoading) return console.log(\"It's loading\");\r\n  if (!error && !isLoading && data) {\r\n    return data;\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,QAAQA,CAACC,GAAG,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACO,SAAS,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd,IAAI,CAACE,GAAG,EAAE;IAEVK,UAAU,CAAC,IAAI,CAAC;IAEhB,eAAeG,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;QACjC,MAAME,IAAI,GAAG,MAAMO,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClCR,OAAO,CAACD,IAAI,CAAC;MACf,CAAC,CAAC,OAAOU,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChBL,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;IAEAG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;EAET,IAAIM,KAAK,EAAE,OAAOS,MAAM,CAACD,GAAG,CAACR,KAAK,CAAC;EACnC,IAAIF,SAAS,EAAE,OAAOS,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EACjD,IAAI,CAACR,KAAK,IAAI,CAACF,SAAS,IAAIF,IAAI,EAAE;IAChC,OAAOA,IAAI;EACb;AACF;AAACD,EAAA,CA/BeF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}