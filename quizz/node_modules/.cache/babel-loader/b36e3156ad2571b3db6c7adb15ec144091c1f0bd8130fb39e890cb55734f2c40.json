{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\infos\\\\Documents\\\\quizz\\\\quizz\\\\src\\\\pages\\\\Worldcloud.js\";\nimport React from \"react\";\nimport ReactWordcloud from \"react-wordcloud\";\nfunction Worldcloud() {\n  const words = [{\n    text: \"told\",\n    value: 1\n  }, {\n    text: \"mistake\",\n    value: 2\n  }, {\n    text: \"thought\",\n    value: 3\n  }, {\n    text: \"bad\",\n    value: 17\n  }];\n  const callbacks = {\n    getWordColor: word => word.value > 50 ? \"blue\" : \"red\",\n    onWordClick: console.log,\n    onWordMouseOver: console.log,\n    getWordTooltip: word => `${word.text} (${word.value}) [${word.value > 50 ? \"good\" : \"bad\"}]`\n  };\n  const options = {\n    rotations: 2,\n    rotationAngles: [-90, 0]\n  };\n  const size = [600, 400];\n  return /*#__PURE__*/React.createElement(ReactWordcloud, {\n    callbacks: callbacks,\n    options: options,\n    size: size,\n    words: words,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }\n  });\n}\n_c = Worldcloud;\nexport default Worldcloud;\nvar _c;\n$RefreshReg$(_c, \"Worldcloud\");","map":{"version":3,"names":["React","ReactWordcloud","Worldcloud","words","text","value","callbacks","getWordColor","word","onWordClick","console","log","onWordMouseOver","getWordTooltip","options","rotations","rotationAngles","size","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/infos/Documents/quizz/quizz/src/pages/Worldcloud.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactWordcloud from \"react-wordcloud\";\r\n\r\nfunction Worldcloud() {\r\n  const words = [\r\n    {\r\n      text: \"told\",\r\n      value: 1,\r\n    },\r\n    {\r\n      text: \"mistake\",\r\n      value: 2,\r\n    },\r\n    {\r\n      text: \"thought\",\r\n      value: 3,\r\n    },\r\n    {\r\n      text: \"bad\",\r\n      value: 17,\r\n    },\r\n  ];\r\n\r\n  const callbacks = {\r\n    getWordColor: (word) => (word.value > 50 ? \"blue\" : \"red\"),\r\n    onWordClick: console.log,\r\n    onWordMouseOver: console.log,\r\n    getWordTooltip: (word) => `${word.text} (${word.value}) [${word.value > 50 ? \"good\" : \"bad\"}]`,\r\n  };\r\n  const options = {\r\n    rotations: 2,\r\n    rotationAngles: [-90, 0],\r\n  };\r\n  const size = [600, 400];\r\n\r\n  return <ReactWordcloud callbacks={callbacks} options={options} size={size} words={words} />;\r\n}\r\n\r\nexport default Worldcloud;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,iBAAiB;AAE5C,SAASC,UAAUA,CAAA,EAAG;EACpB,MAAMC,KAAK,GAAG,CACZ;IACEC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE;EACT,CAAC,EACD;IACED,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE;EACT,CAAC,EACD;IACED,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE;EACT,CAAC,EACD;IACED,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE;EACT,CAAC,CACF;EAED,MAAMC,SAAS,GAAG;IAChBC,YAAY,EAAGC,IAAI,IAAMA,IAAI,CAACH,KAAK,GAAG,EAAE,GAAG,MAAM,GAAG,KAAM;IAC1DI,WAAW,EAAEC,OAAO,CAACC,GAAG;IACxBC,eAAe,EAAEF,OAAO,CAACC,GAAG;IAC5BE,cAAc,EAAGL,IAAI,IAAM,GAAEA,IAAI,CAACJ,IAAK,KAAII,IAAI,CAACH,KAAM,MAAKG,IAAI,CAACH,KAAK,GAAG,EAAE,GAAG,MAAM,GAAG,KAAM;EAC9F,CAAC;EACD,MAAMS,OAAO,GAAG;IACdC,SAAS,EAAE,CAAC;IACZC,cAAc,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EACzB,CAAC;EACD,MAAMC,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;EAEvB,oBAAOjB,KAAA,CAAAkB,aAAA,CAACjB,cAAc;IAACK,SAAS,EAAEA,SAAU;IAACQ,OAAO,EAAEA,OAAQ;IAACG,IAAI,EAAEA,IAAK;IAACd,KAAK,EAAEA,KAAM;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC;AAC7F;AAACC,EAAA,GAjCQvB,UAAU;AAmCnB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}